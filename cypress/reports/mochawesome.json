{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-08-14T02:41:24.246Z",
    "end": "2021-08-14T02:42:44.442Z",
    "duration": 80196,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2546dc36-5f1e-44d3-8d77-f5511a4de213",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d95e91b4-280a-43e1-9b4e-9670ec746640",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "755c30e2-4eb9-44e9-acba-3ec4ce6956ab",
              "parentUUID": "d95e91b4-280a-43e1-9b4e-9670ec746640",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "755c30e2-4eb9-44e9-acba-3ec4ce6956ab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 238,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f3bb3ee9-1321-4e72-88a2-dde866996134",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "68e50c60-5d10-46cf-9209-e72ba9d33e46",
              "parentUUID": "f3bb3ee9-1321-4e72-88a2-dde866996134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "1291cb7f-5589-4305-8e93-34799f121029",
              "parentUUID": "f3bb3ee9-1321-4e72-88a2-dde866996134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "8e2d2a47-4434-4f03-8386-729a48489c34",
              "parentUUID": "f3bb3ee9-1321-4e72-88a2-dde866996134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "0ef8b965-6218-4349-863e-7a8d76418033",
              "parentUUID": "f3bb3ee9-1321-4e72-88a2-dde866996134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "83779e41-c4b3-4825-bd16-957566ed228e",
              "parentUUID": "f3bb3ee9-1321-4e72-88a2-dde866996134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "29f27ced-f6a7-4707-b980-1b8620535a87",
              "parentUUID": "f3bb3ee9-1321-4e72-88a2-dde866996134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "06aeaa78-8549-4b4d-90d4-2111aecab665",
              "parentUUID": "f3bb3ee9-1321-4e72-88a2-dde866996134",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "68e50c60-5d10-46cf-9209-e72ba9d33e46",
            "1291cb7f-5589-4305-8e93-34799f121029",
            "8e2d2a47-4434-4f03-8386-729a48489c34",
            "0ef8b965-6218-4349-863e-7a8d76418033",
            "83779e41-c4b3-4825-bd16-957566ed228e",
            "29f27ced-f6a7-4707-b980-1b8620535a87",
            "06aeaa78-8549-4b4d-90d4-2111aecab665"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 875,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5b6e2be4-cd4a-4609-8ab4-a82104118076",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "38061359-061e-4e5c-af23-5f5a5e57b082",
              "parentUUID": "5b6e2be4-cd4a-4609-8ab4-a82104118076",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "30c57101-67da-4990-a3f4-b63217a828a8",
              "parentUUID": "5b6e2be4-cd4a-4609-8ab4-a82104118076",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38061359-061e-4e5c-af23-5f5a5e57b082",
            "30c57101-67da-4990-a3f4-b63217a828a8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 252,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7ecf6f69-75b1-4edc-af4e-c0b63b2cceb7",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "79990347-7968-4a8d-a6c4-eba938db5801",
              "parentUUID": "7ecf6f69-75b1-4edc-af4e-c0b63b2cceb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "72c991b2-5482-447e-8253-55808fb69aae",
              "parentUUID": "7ecf6f69-75b1-4edc-af4e-c0b63b2cceb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "2115377b-d4ac-4992-a86e-071505c91744",
              "parentUUID": "7ecf6f69-75b1-4edc-af4e-c0b63b2cceb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "df798a0c-2216-4159-a9fb-b8512fc4eeff",
              "parentUUID": "7ecf6f69-75b1-4edc-af4e-c0b63b2cceb7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79990347-7968-4a8d-a6c4-eba938db5801",
            "72c991b2-5482-447e-8253-55808fb69aae",
            "2115377b-d4ac-4992-a86e-071505c91744",
            "df798a0c-2216-4159-a9fb-b8512fc4eeff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 449,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "090a9287-400f-4147-9ada-3995ef5ef898",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 327,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "a0f40e86-72f5-4d7d-b1d8-c20dc1133b45",
              "parentUUID": "090a9287-400f-4147-9ada-3995ef5ef898",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 305,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "3fb00b50-dfc4-4463-af23-8d03721a1d3c",
              "parentUUID": "090a9287-400f-4147-9ada-3995ef5ef898",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0f40e86-72f5-4d7d-b1d8-c20dc1133b45",
            "3fb00b50-dfc4-4463-af23-8d03721a1d3c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 632,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e4dd2986-bd2b-4859-854d-92835834b444",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d5d9a0b4-b4c2-4650-9c29-7b4eb7a05a19",
              "parentUUID": "e4dd2986-bd2b-4859-854d-92835834b444",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "168a7ef2-bc97-4683-9c05-7737615ae121",
              "parentUUID": "e4dd2986-bd2b-4859-854d-92835834b444",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5d9a0b4-b4c2-4650-9c29-7b4eb7a05a19",
            "168a7ef2-bc97-4683-9c05-7737615ae121"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 168,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "42775b00-d568-4a22-a0dd-f2150862b8c7",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 429,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "50dd128e-4b95-4d90-95fe-86ad00ff697c",
              "parentUUID": "42775b00-d568-4a22-a0dd-f2150862b8c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8049,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "eda006b4-e7cc-450c-b6ab-855a95e81361",
              "parentUUID": "42775b00-d568-4a22-a0dd-f2150862b8c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50dd128e-4b95-4d90-95fe-86ad00ff697c",
            "eda006b4-e7cc-450c-b6ab-855a95e81361"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8478,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4b28f9d8-db7e-42a4-85f9-d2e23a37caf6",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2036,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "06bc3f80-b1d9-4337-aad5-ceb06285d092",
              "parentUUID": "4b28f9d8-db7e-42a4-85f9-d2e23a37caf6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8034,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "20b0ce78-503d-4b62-934d-160cb9d358ba",
              "parentUUID": "4b28f9d8-db7e-42a4-85f9-d2e23a37caf6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "f88c3588-c524-4b3c-8f0f-d1e5348f5a2e",
              "parentUUID": "4b28f9d8-db7e-42a4-85f9-d2e23a37caf6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06bc3f80-b1d9-4337-aad5-ceb06285d092",
            "20b0ce78-503d-4b62-934d-160cb9d358ba",
            "f88c3588-c524-4b3c-8f0f-d1e5348f5a2e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11333,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "61176a6d-71b5-4dc4-8a5f-be2884dc59d4",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "6a9ab2af-222b-478e-8f1d-56f086daeef3",
              "parentUUID": "61176a6d-71b5-4dc4-8a5f-be2884dc59d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "8a4c5e26-1beb-4a5e-afcd-afcf296ef6c3",
              "parentUUID": "61176a6d-71b5-4dc4-8a5f-be2884dc59d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 53,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "d58e06cc-58e1-4186-9682-af829c9d8317",
              "parentUUID": "61176a6d-71b5-4dc4-8a5f-be2884dc59d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "c4da9330-ba4a-488c-be16-e4eb6b033690",
              "parentUUID": "61176a6d-71b5-4dc4-8a5f-be2884dc59d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6a9ab2af-222b-478e-8f1d-56f086daeef3",
            "8a4c5e26-1beb-4a5e-afcd-afcf296ef6c3",
            "d58e06cc-58e1-4186-9682-af829c9d8317",
            "c4da9330-ba4a-488c-be16-e4eb6b033690"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2505,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4e42ba1d-7172-4192-be61-f7931afff2e9",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4462,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:54667/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:54667/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:54667/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:54667/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:54667/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:54667/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:54667/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:54667/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:54667/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1ce583ce-6bbf-493c-a90b-d99a158c3acd",
              "parentUUID": "4e42ba1d-7172-4192-be61-f7931afff2e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4418,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:54667/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:54667/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:54667/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:54667/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:54667/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:54667/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:54667/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:54667/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:54667/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1934dbc8-24db-4c1d-a26b-3dbc8b97bebc",
              "parentUUID": "4e42ba1d-7172-4192-be61-f7931afff2e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4442,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:54667/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:54667/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:54667/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:54667/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:54667/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:54667/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:54667/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:54667/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:54667/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d329452f-6d9f-4330-8348-fc7980cbdc93",
              "parentUUID": "4e42ba1d-7172-4192-be61-f7931afff2e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4435,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:54667/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:54667/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:54667/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:54667/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:54667/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:54667/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:54667/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:54667/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:54667/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2b3214f4-0801-44eb-ac8d-a301e77c69cf",
              "parentUUID": "4e42ba1d-7172-4192-be61-f7931afff2e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4455,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:54667/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:54667/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:54667/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:54667/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:54667/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:54667/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:54667/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:54667/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:54667/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ad805455-4d43-4a4a-905a-dd7f6aa7f11c",
              "parentUUID": "4e42ba1d-7172-4192-be61-f7931afff2e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4472,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:54667/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:54667/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:54667/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:54667/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:54667/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:54667/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:54667/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:54667/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:54667/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5d41a7b4-9b03-4abf-98d7-e625be9ba33b",
              "parentUUID": "4e42ba1d-7172-4192-be61-f7931afff2e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4424,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:54667/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:54667/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:54667/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:54667/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:54667/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:54667/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:54667/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:54667/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:54667/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d2cdc018-f0c4-4c9b-8653-c8b057dba646",
              "parentUUID": "4e42ba1d-7172-4192-be61-f7931afff2e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4472,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:54667/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:54667/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:54667/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:54667/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:54667/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:54667/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:54667/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:54667/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:54667/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6eede8a7-4ea9-40dd-9165-61f825652dca",
              "parentUUID": "4e42ba1d-7172-4192-be61-f7931afff2e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4424,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:54667/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:54667/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:54667/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:54667/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:54667/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:54667/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:54667/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:54667/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:54667/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7bdcc605-7296-4b8a-a01c-7411f3b4e94f",
              "parentUUID": "4e42ba1d-7172-4192-be61-f7931afff2e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1ce583ce-6bbf-493c-a90b-d99a158c3acd",
            "1934dbc8-24db-4c1d-a26b-3dbc8b97bebc",
            "d329452f-6d9f-4330-8348-fc7980cbdc93",
            "2b3214f4-0801-44eb-ac8d-a301e77c69cf",
            "ad805455-4d43-4a4a-905a-dd7f6aa7f11c",
            "5d41a7b4-9b03-4abf-98d7-e625be9ba33b",
            "d2cdc018-f0c4-4c9b-8653-c8b057dba646",
            "6eede8a7-4ea9-40dd-9165-61f825652dca",
            "7bdcc605-7296-4b8a-a01c-7411f3b4e94f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40004,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2e46baa9-3805-4d9b-a2ce-3ed4c3498ded",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4469,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:54667/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:54667/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:54667/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:54667/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:54667/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:54667/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:54667/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:54667/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:54667/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ec5b514e-811f-4794-9449-5ce4f159bcd8",
              "parentUUID": "2e46baa9-3805-4d9b-a2ce-3ed4c3498ded",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4422,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:54667/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:54667/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:54667/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:54667/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:54667/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:54667/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:54667/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:54667/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:54667/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0963b6e8-d039-4f45-9a50-0035e565d6a1",
              "parentUUID": "2e46baa9-3805-4d9b-a2ce-3ed4c3498ded",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4485,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:54667/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:54667/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:54667/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:54667/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:54667/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:54667/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:54667/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:54667/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:54667/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:54667/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:54667/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b728233f-5557-4410-a3be-b95e8597296a",
              "parentUUID": "2e46baa9-3805-4d9b-a2ce-3ed4c3498ded",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ec5b514e-811f-4794-9449-5ce4f159bcd8",
            "0963b6e8-d039-4f45-9a50-0035e565d6a1",
            "b728233f-5557-4410-a3be-b95e8597296a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13376,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d7cc7bc0-45c8-4bb3-8b9a-81362fa4af8a",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 533,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "f9c94f76-d2f3-4d0a-acf9-d3b62516488f",
              "parentUUID": "d7cc7bc0-45c8-4bb3-8b9a-81362fa4af8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 497,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "62141b69-e473-4249-834e-136e2aa6bc4e",
              "parentUUID": "d7cc7bc0-45c8-4bb3-8b9a-81362fa4af8a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9c94f76-d2f3-4d0a-acf9-d3b62516488f",
            "62141b69-e473-4249-834e-136e2aa6bc4e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1030,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}